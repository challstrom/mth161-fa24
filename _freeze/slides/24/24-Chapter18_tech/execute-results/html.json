{
  "hash": "9a972f09be6d42c998d599d2e3c236f7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: chi-squared tests with technology\nsubtitle: Chapter 18\nauthor: \"\"\nformat: revealjs\nauto-stretch: false\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n## Last time...\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ──────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nLoading required package: airports\n\nLoading required package: cherryblossom\n\nLoading required package: usdata\n```\n\n\n:::\n:::\n\n\n\n\nIn response to buyer's prompt, seller either [discloses]{.red} the known\nissue or [does not]{.red}.\n\n![](images/ipad.png){width=\"100%\"}\n\nIs the buyer's question [independent]{.red} of whether the seller\ndisclosed the problem?\n\n------------------------------------------------------------------------\n\nWe found expected counts for each group...\n\n![](images/ipad_expected.png){width=\"90%\"}\n\nThen calculated $\\chi^2$\n\n$$\n\\chi^2 = \\sum\\frac{( O - E)^2}{E}\n$$\n\n## Chi-squared\n\n\\begin{multline}\n\\chi^2 = \\frac{(2 - 20.33)^2}{20.33} + \\frac{(23-20.33)^2}{20.33} + \\\\\n\\frac{(36-20.33)^2}{20.33} + \n\\frac{(71 -52.67)^2}{52.67} + \\\\\n\\frac{(50-52.67)^2}{52.67} + \\frac{(37-52.67)^2}{52.67} \\\\\n= 40.13\n\\end{multline}\n\n# How can we make this calculation easier?\n\n## Option 1:  Desmos\n\n\n\n![](images/desmos1.png){width=\"90%\"}\n\n\n[Link to Desmos Example](https://www.desmos.com/calculator/m9ycqget8k)\n\n\n## Option 2: Spreadsheet\n\n![](images/spreadsheet.png){width=\"60%\"}\n\n[Link to Google Sheets](https://docs.google.com/spreadsheets/d/1jmOxUN1RCDDOz_zQYs1MK7PD-I9RWp7lY0rPRV1AVzA/edit?usp=sharing)\n\n## Option 3: simple R\n\n### Make a two-way table\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobserved <- c(2, 23, 36, 71, 50, 37)\nexpected <- c(20.33, 20.33, 20.33, 52.67, 52.67, 52.67)\n\ntwo_way <- matrix(c(observed, expected), 3, 2)\n\ntwo_way\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2]\n[1,]    2   71\n[2,]   23   50\n[3,]   36   37\n```\n\n\n:::\n:::\n\n---\n### Chi-squared test\n\n::: {.cell}\n\n```{.r .cell-code}\nchisq.test(two_way)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's Chi-squared test\n\ndata:  two_way\nX-squared = 40.128, df = 2, p-value = 1.933e-09\n```\n\n\n:::\n:::\n\n\n## Larger datasets\n\nFor larger datasets, it's not practical to enter numbers by hand!\n\n\n___\n\n### Example\n>An experiment was run to evaluate three treatments for Type 2 Diabetes in patients aged 10-17 who were being treated with metformin. The three treatments considered were continued treatment with metformin (met), treatment with metformin combined with rosiglitazone (rosi), or a lifestyle intervention program. Each patient had a primary outcome, which was either lacked glycemic control (failure) or did not lack that control (success). \n\n## two-way (contingency) table\n\n![](images/diabetes.png){width=\"95%\"}\n\n$H_0$: treatment and outcome are independent\n\n$H_A$: there is a difference in outcomes between the treatments\n\n## Load dataset\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openintro)\nprint(diabetes2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 699 × 2\n   treatment outcome\n * <fct>     <fct>  \n 1 met       success\n 2 rosi      failure\n 3 rosi      success\n 4 lifestyle success\n 5 met       success\n 6 lifestyle success\n 7 lifestyle success\n 8 rosi      success\n 9 rosi      success\n10 met       failure\n# ℹ 689 more rows\n```\n\n\n:::\n:::\n\n## Option 4\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncont_table <- table(diabetes2$treatment, diabetes2$outcome)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n           \n            failure success\n  lifestyle     109     125\n  met           120     112\n  rosi           90     143\n```\n\n\n:::\n:::\n\n\\\n\n::: {.cell}\n\n```{.r .cell-code}\nchisq.test(cont_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's Chi-squared test\n\ndata:  cont_table\nX-squared = 8.1645, df = 2, p-value = 0.01687\n```\n\n\n:::\n:::\n\n\n## Option 5:  use `infer` package\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(infer)\n\nchisq_test(diabetes2, treatment ~ outcome)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  statistic chisq_df p_value\n      <dbl>    <int>   <dbl>\n1      8.16        2  0.0169\n```\n\n\n:::\n:::\n\n\n\n\n::: {.cell}\n<style type=\"text/css\">\n.red {\ncolor: #B8001F;\n}\n</style>\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}