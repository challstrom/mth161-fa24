{
  "hash": "e2a80ba6c5887e0f511586a73df5beb0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Week Three\nsubtitle: Tuesday\nformat: revealjs\nauto-stretch: false\n\ntitle-block-style: none\n---\n\n\n## Homework Discussion\n\nSection 4.8, #1, 2, 3, 5\n\nWhat are your questions?\n\n## Ch. 4: Exploring Categorical Data\n\n-   **Visualizations:** Bar graphs, mosaic graphs, pie charts, waffle charts\n\n-   **Summary statistics:** proportions\n\n## Last week: COVID deaths\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ndelta <- read_csv(\"delta.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(delta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 268,166 × 3\n   vaccine    age   outcome\n   <chr>      <chr> <chr>  \n 1 Vaccinated <50   died   \n 2 Vaccinated <50   died   \n 3 Vaccinated <50   died   \n 4 Vaccinated <50   died   \n 5 Vaccinated <50   died   \n 6 Vaccinated <50   died   \n 7 Vaccinated <50   died   \n 8 Vaccinated <50   died   \n 9 Vaccinated <50   died   \n10 Vaccinated <50   died   \n# ℹ 268,156 more rows\n```\n\n\n:::\n:::\n\n\n## summarize two categorical variables\n\n\\\n\n::: columns\n::: {.column width=\"50%\"}\n### Count\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndelta |>\n  count(vaccine, outcome)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  vaccine      outcome       n\n  <chr>        <chr>     <int>\n1 Unvaccinated died        250\n2 Unvaccinated survived 150802\n3 Vaccinated   died        477\n4 Vaccinated   survived 116637\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n### Contingency Table\n\n(also known as *two-way* table)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(delta$vaccine, delta$outcome)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              \n                 died survived\n  Unvaccinated    250   150802\n  Vaccinated      477   116637\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Contingency Table with Totals\n\n\\\n\n|                  | died | survived |        |\n|------------------|------|----------|--------|\n| **Unvaccinated** | 250  | 150802   | 151052 |\n| **Vaccinated**   | 447  | 116637   | 117084 |\n|                  | 697  | 267439   | 268136 |\n\n\\\nCan easily calculate proportions from this table. E.g. proportion of vaccinated patients that died: $$\n\\frac{447}{117084} = 0.004\n$$\n\n## Row and column proportions\n\nConvert each entry to a proportion of either column or row total.\n\nE.g. row proportions gives proportion of all vaccinated/unvaccinate patients that died\n\n|                  | died  | survived |     |\n|------------------|-------|----------|-----|\n| **Unvaccinated** | 0.002 | 0.998    | 1   |\n| **Vaccinated**   | 0.004 | 0.436    | 1   |\n\n## Bar plot (graph)\n\nVisualize one (or more) categorical variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(delta, aes(x = vaccine)) +\n  geom_bar(fill = \"brown4\")\n```\n\n::: {.cell-output-display}\n![](05-chapter4_files/figure-revealjs/bar-1-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n### Vertical axis can be proportion\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](05-chapter4_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n## Stacked bar graphs\n\n### more than one variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(delta, aes(x = vaccine, fill = age)) +\n  geom_bar(position = \"stack\")\n```\n\n::: {.cell-output-display}\n![](05-chapter4_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## Standardized bar graphs\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(delta, aes(x = vaccine, fill = age)) +\n  geom_bar(position = \"fill\") +\n  labs( y = \"Proportion\")\n```\n\n::: {.cell-output-display}\n![](05-chapter4_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Dodged bar graphs\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(delta, aes(x = vaccine, fill = age)) +\n  geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](05-chapter4_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Pie charts\n\nSimilar to bar charts ![](pie1.png){width=\"1000em\" fig-align=\"center\"}\n\n## Pie charts\n\ncan be difficult to interpret\n\nWhat is the relative frequency of Respiratory conditions?\n\n![](pie2.png){width=\"100%\"}\n",
    "supporting": [
      "05-chapter4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}