{
  "hash": "0a3e8e1a12031c14e995bb40b3101e67",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Inference for two-way tables\nsubtitle: Chapter 18\nauthor: \"\"\nformat: revealjs\nauto-stretch: false\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n## Two-Way Tables\n\nIn Chapters 16 and 17, we looked at [proportions]{.red} measured across\n[two groups]{.red} - i.e. success and failure\n\nNow, consider variables that have more than two possible options. This\nmeans that there is not a single population parameter to look at.\n\n## Example: selling used iPad\n\n-   Seller has a used iPad that is known to have a potential issue (e.g\n    it crashes occasionally)\n\n-   Buyer provides a prompt: \"I'm interested in buying this iPad...\"\n\n    -   [General:]{.red} ... what can you tell me about it?\n    -   [Positive Assumption:]{.red} ... it doesn't have any problems, does\n        it?\n    -   [Negative Assumption:]{.red} ... what problems does it have?\n\n------------------------------------------------------------------------\n\nIn response to buyer's prompt, seller either [discloses]{.red} the known\nissue or [does not]{.red}.\n\n![](images/ipad.png){width=\"100%\"}\n\nIs there evidence that there the different prompts lead to a difference\nin disclosure rate?\n\nIs the buyer's question [independent]{.red} of whether the seller\ndisclosed the problem?\n\n## Expected Counts\n\nTo help us answer this question, we look at [expected counts.]{.red}\n\nIf the questions had no impact on what the seller disclosed, we should\nbe able to just look at [total]{.red} number of disclosures out of the\n[total]{.red} number of cases.\n\n$$\n\\frac{61}{219} = 0.2785\n$$\n\n------------------------------------------------------------------------\n\nThen, using this disclosure rate, what would be the [expected]{.red} number of\ncounts in each group?\n\n$$\n73 ( 0.2785) = 20.33\n$$\n\n$$\n73 (1-0.2785) = 52.67\n$$\n\n![](images/ipad_expected.png){width=\"90%\"}\n\n# Merry Christmas!\n\n\\\n\n:::{.fragment}\nWhat sound does the \"ch\" make in the word [Christmas]{.red}?\n\nWhy is that?\n:::\n\n## Chi-squared\n\nFor [each group]{.red} we now calculate $$\n\\frac{( \\mbox{observed count} - \\mbox{expected count})^2}{\\mbox{expected count}}\n$$ and [add]{.red} them together. This is called the [chi-squared]{.red}\ntest statistic $\\chi^2$.\n\n$$\n\\chi^2 = \\sum\\frac{( \\mbox{observed count} - \\mbox{expected count})^2}{\\mbox{expected count}}\n$$\n\n## Conditions\n\n-   Observations are independent\n-   Sample size is large enough \n    - at least 5 expected counts in each\n    group\n\n------------------------------------------------------------------------\n\n![](images/ipad_expected.png){width=\"100%\"}\n\n\\begin{multline}\n\\chi^2 = \\frac{(2 - 20.33)^2}{20.33} + \\frac{(23-20.33)^2}{20.33}+ \\ldots \\\\\n+ \n\\frac{(37-52.67)^2}{52.67} \n\\end{multline}\n\n------------------------------------------------------------------------\n\n### Did you get $\\chi^2 = 40.13$?\n\n\\\n\n:::{.fragment}\nIs this value unusual?\n:::\n\n:::{.fragment}\nTo decide we look at the [chi-squared distribution]{.red} -- same idea as with normal distribution, but different shape.\n:::\n\n:::{.fragment}\nUse technology (or a table)\n:::\n\n::: fragment\nThe exact shape is determined by the [degree of freedom]{.red} of our\ntwo-way table.\n:::\n\n## Degree of Freedom\n\n$$\ndf = (\\mbox{\\# of rows} - 1) \\times (\\mbox{\\# of columns} - 1)\n$$\n\nIn our example, \n$$\ndf = (R - 1)\\times (C-1) = 2*1 = 2\n$$\n\n\n------------------------------------------------------------------------\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve(dchisq(x, df = 2), from =0, to = 30)\n```\n\n::: {.cell-output-display}\n![](23-Chapter18_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n1 - pchisq(40.13, df = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.93144e-09\n```\n\n\n:::\n:::\n\n\n\n## Conclusion\n\nThis p-value is very very small! $$\n\\mbox{p-value} = 0.000000000193\n$$ Much smaller than our discernment level $\\alpha = 0.05$. We have\nevidence to [reject]{.red} the null hypothesis.\n\n:::{.fragment}\nThe data provides convincing evidence that the question asked\n[did]{.red} affect a sellerâ€™s likelihood to tell the truth about\nproblems with the iPad.\n:::\n\n## Chi-squared distribution\n\nThe larger the degree of freedom, the longer the right tail extends. The\nsmaller the degrees of freedom, the more peaked the mode on the left\nbecomes.\n\n![](images/chisquared.png){width=\"100%\"}\n\n## Tools to calculate p-value from a $\\chi^2$ distribution\n\n-   [Use Desmos](https://www.desmos.com/calculator/qqyht18fxn)\n\n-   Use R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 - pchisq(40.13, df = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.93144e-09\n```\n\n\n:::\n:::\n\n\n\n-   Use tables\n\n\n\n::: {.cell}\n<style type=\"text/css\">\n.red {\ncolor: #B8001F;\n}\n</style>\n:::\n",
    "supporting": [
      "23-Chapter18_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}