{
  "hash": "976e51974e92e7cbfb9c1f8d0c893ebb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Inference for a single mean\nsubtitle: Chapter 19\nauthor: \"\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    transition: fade\n    slide-number: true\n    chalkboard: true\neditor: visual\nexecute:\n  freeze: auto\n  echo: true\n  warning: false\n---\n\n\n## Inference with [*numerical*]{.red} variables\n\n\n::: {.cell}\n\n:::\n\n\nWhich of the following scenarios involves a [**mean**]{.red}? Which involves a [**proportion**]{.red}?\n\n-   Researchers want to know whether more Oregonians than Californians report being sleep-deprived.\n-   A city council member wants to know how likely it is that a proposed tax bill passes in an upcoming election.\n-   Scientists want to know the typical amount of mercury contained in the muscle tissue of dolphins.\n-   Researchers conduct a study to examine the effects of coffee consumption on depression.\n\n------------------------------------------------------------------------\n\n## Dolphins\n\nMercury is a heavy metal that lasts a long time in the bodies of animals that consume it; ingesting too much can be harmful.\n\nScientists want to predict the typical amount of mercury contained in the muscle tissue of dolphins from the Taiji area of Japan, so they sample 19 dolphins for mercury content ($\\mu$ g/wet g).\n\n![](images/dolphins.png){width=\"90%\"}\n\n## Dolphins: confidence interval\n\nThe mean (average) amount of mercury in our sample is $4.4$ g/ wet g. What can this tell us about the **population parameter**?\n\n\\\n\nWe want to find a [confidence interval]{.red} for the average amount of mercury in the entire population of local dolphins ($\\mu$)\n\n---\n\nPreviously... $$\n\\mbox{CI} = \\mbox{point estimate} \\pm z^\\ast * SE\n$$ where $z^*$ was determined using our [normal distribution]{.red} based on our particular confidence level (eg, 95%).\n\n------------------------------------------------------------------------\n\n[EXCEPT]{.red} we now have two problems:\n\n(1) We don't know the **population** standard deviation, $\\sigma$, which is needed for calculating SE\n(2) Although we can use the **sample** standard deviation $s$ as an approximation, this is less accurate and so we will no longer have a **normal** distribution -- especially if sample size is not very large.\n\n## A new model: t-distribution\n\nBecause the *sample* standard deviation can vary a lot between samples, we have a [**t-distribution**]{.red} curve rather than a normal curve.\n\n![](images/t-vs-normal.png){fig-align=\"center\" width=\"90%\"}\n\nExact shape depends on sample size via [degrees of freedom]{.red}: $\\mbox{df} = n-1$.\n\n## Desmos\n\n[Desmos t-distribution example](https://www.desmos.com/calculator/ygrpsomkkt)\n\n![](images/desmos-graph.png){fig-align=\"center\" width=\"70%\"}\n\n## Example: find p-value\n\n![](images/t-dist.png){fig-align=\"center\" width=\"70%\"}\n\n### R code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npt(-2.10, df = 18)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0250452\n```\n\n\n:::\n:::\n\n\n### Desmos\n\n[Desmos t-distribution tool](https://www.desmos.com/calculator/xmarhrxybp)\n\n## Back to Confidence Intervals\n\n$$\n\\mbox{CI} = \\mbox{point estimate} \\pm t_{df}^\\ast * SE\n$$ where $t^*$ is determined based on our particular confidence level (eg, 95%) **and** degree of freedom\n\n$$\nSE = \\frac{ s}{\\sqrt{n}}\n$$\n\n## Example\n\nWhen $n=19$, what is $t^\\ast_{df}$ for a 95% confidence interval?\n\n-   If $n=19$ then $df = 19 -1 = 18$.\n\n-   Use R code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqt(0.975, df = 18)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.100922\n```\n\n\n:::\n:::\n\n\n[Question:]{.red} where did 0.975 come from?\n\n-   Use Desmos to find $t^\\ast_{18}$\n\n## Example\n\nCompute and interpret the 95% confidence interval for the average mercury content in Rissoâ€™s dolphins.\n\n::: fragment\n\\begin{align}\n\\bar{x} &\\pm t^\\ast_{18} \\times SE \\\\\n4.4 &\\pm 2.10 \\times 0.528 \\\\\n&(3.29, 5.51)\n\\end{align}\n:::\n\n\n::: {.cell}\n<style type=\"text/css\">\n.red {\ncolor: #B8001F;\n}\n</style>\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}