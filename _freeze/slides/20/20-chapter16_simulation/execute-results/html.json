{
  "hash": "b268e200001dece04d4147a5438d1e1e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Inference for Single Proportion - part 2\nsubtitle: Chapter 16\nauthor: \"\"\nformat: revealjs\nauto-stretch: false\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n## Medical consultant example...\n\n\n\n::: {.cell}\n<style type=\"text/css\">\n.red {\ncolor: #B8001F;\n}\n</style>\n:::\n\n\n\nA consultant tried to attract patients by noting the average complication rate for liver donor surgeries in the US is about 10%, but her clients have had only 3 complications in the 62 liver donor surgeries she has facilitated. She claims this is strong evidence that her work meaningfully contributes to reducing complications (and therefore she should be hired!).\n\n$$\n\\hat{p} = \\frac{3}{62} = 0.048\n$$\n\n## State the null hypothesis\n\nClaim is that $\\hat{p}$ is [less]{.red} than then national average of 0.1\n\n- $H_0: p = 0.1$\n- $H_A: p < 0.1$\n\n## Discernment level?\n\n- Type I error:  mistakenly reject $H_0$ when it's true\n\n  + Misled by false advertising!\n  + Make $\\alpha$ smaller to avoid\n\n- Type II error:  mistakenly fail to reject $H_0$ when it's false\n\n  + Being cautious leads to missing out on above average care.\n  + Make $\\alpha$ larger to avoid\n\n\n\n\n## Check conditions for CLT\n\n- Independent? yes\n\n- Large enough sample size? [no!]{.red}\n\n    $n p_0 = 62 \\cdot 0.1 = 6.2$\n    \n    $n (1-p_0) = 62 \\cdot 0.9 = 55.8$\n    \n\\\n\n[What happens if we ignore this?]{.red}\n\n## Calculate Z\n\n$$\nSE = \\sqrt{ \\frac{p_0 (1-p_0)}{n}} =  \\sqrt{\\frac{0.1 \\cdot 0.9}{62}} = 0.038\n$$\n$$\nZ = \\frac{\\hat{p} - p_0}{SE} = \\frac{ 0.048 - 0.1}{0.038} = -1.37\n$$\n\n## Find p-value for Z = -1.37\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](20-chapter16_simulation_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(-1.37)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.08534345\n```\n\n\n:::\n:::\n\n\n\n## Compare to discernment level\n\nSuppose $\\alpha = 0.1$ (trying to avoid Type II errors)\n\n\\\n\nSince p-value (0.085) is [less]{.red} than $\\alpha$, we [do]{.red} have evidence to reject the null hypothesis.\n\n\\\n\nWe think that our consultant's complication rate is significantly below the national average.\n\n\n:::{.fragment .center-align}\n[BUT WAIT!]{.red}\n\n[CLT isn't valid!!]{.red}\n:::\n\n\n\n---\n### Do a simulation!!\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2024)\n\nnull_dist <- organ_donor |>\n  specify(response = outcome, success = \"complication\") |>\n  hypothesize(null = \"point\", p = 0.1) |>\n  generate(reps = 1000, type = \"draw\") |>\n  calculate(stat = \"prop\")\n```\n:::\n\n## Simulated Null-Distribution\n\n::: {.cell}\n\n```{.r .cell-code}\nvisualize(null_dist) +\n  shade_p_value(obs_stat = 0.0484, direction = \"less\")\n```\n\n::: {.cell-output-display}\n![](20-chapter16_simulation_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n## Actual p-value?\n\n::: {.cell}\n\n```{.r .cell-code}\nget_p_value(null_dist, obs_stat = 0.0484, direction = \"less\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 1\n  p_value\n    <dbl>\n1   0.121\n```\n\n\n:::\n:::\n\n\\\n\n- [Not]{.red} less than $\\alpha = 0.1$\n- Previously had found $p = 0.085$ \n- conclusion depends on discernment level as well as how we found p-value\n\n",
    "supporting": [
      "20-chapter16_simulation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}