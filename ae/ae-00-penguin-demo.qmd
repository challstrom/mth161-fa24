---
title: "AE-01: Hello Penguins"
categories: 
  - Application exercise
editor: visual
---

![](https://raw.githubusercontent.com/quarto-dev/quarto-web/main/docs/get-started/hello/rstudio/lter_penguins.png){style="float:right;" fig-alt="Illustration of three species of Palmer Archipelago penguins: Chinstrap, Gentoo, and Adelie. Artwork by @allison_horst." width="401"}

In this activity, we will meet some penguins, start thinking about data and variables, and see some R code in action. The `penguins` data from the [**palmerpenguins**](https://allisonhorst.github.io/palmerpenguins "palmerpenguins R package") R package contains size measurements for three species of penguins observed on three islands in the Palmer Archipelago in Antarctica.

Data were collected and made available by [Dr. Kristen Gorman](https://www.uaf.edu/cfos/people/faculty/detail/kristen-gorman.php) and the [Palmer Station, Antarctica LTER](https://pallter.marine.rutgers.edu/), a member of the [Long Term Ecological Research Network](https://lternet.edu/).

In order to access this data, we need to load the package into R. While we're at it, we can load any other packages that we need.

```{r}
#| label: load-packages
#| include: true
#| message: false

library(tidyverse)
library(palmerpenguins)
```

## A First Look at the Data

Let's take a peek at the data with the following R code:

```{r}
head(penguins)
```

This command gives us a table (tibble) which shows us the first six rows of the **data frame** called `penguins`. When working with data, we typically want each row to be an individual observation (or case), each column to be a variable, and each entry (cell) to be a single value. Data that is in this format is called **tidy**. A significant part of the work involved in analyzing data is getting it tidy (a process often referred to as "cleaning the data") or at least accounting for ways in which it isn't tidy.

::: {.callout-note title="Questions" icon="false"}
-   What does each row in this data frame represent?
-   Is this data tidy? Why or why not?
-   What do you think the result of the R command `head(penguins, 10)` would be? Try it!
-   What other questions do you have about this table?
:::

### Other points of view

Here are two other R commands we can use to view the data.

```{r}
print(penguins)
```

```{r}
glimpse(penguins)
```

::: {.callout-note title="Questions" icon="false"}
-   What differences do you notice between these two R commands?
-   How many penguins are included in this dataset?
-   How many variables are there? Which are numerical? Which are categorical?
:::

## Summary Statistics

A **summary statistic** is a single number that summarizes our data in some meaningful way. For example, we might ask:

-   What percentage of our Adelie penguins were found on Torgersen island?
-   What is the average (mean) flipper length of our penguins?

We can use R to help us analyze the data to answer these questions. We might start by counting how many penguins of each species there are.

```{r}
penguins |>
  count(species)
```

We can do something similar to determine how many penguins are on each island.

::: {.callout-note title="Try It!" icon="false"}
Add a code chunk that determines how many penguins are on each island. Does this help us answer our question? Why or why not?
:::

To answer our question, it seems we need to dig deeper. Here we produce what's sometimes called a two-way, or contingency table. We'll see these again in Chapter 5.

```{r}
table(penguins$species, penguins$island)
```

::: {.callout-note title="Task" icon="false"}
Determine what percentage of the Adelie penguins are on Torgenson island.
:::

## Visualization

An important tool in understanding and analyzing data is visualization. For example, we can use a **scatterplot** to help us understand relationships between variables. Let's look at a scatterpolot that compares body mass and flipper length.

```{r}
ggplot(data = penguins, 
       mapping = aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point()

```

::: {.callout-note title="Questions" icon="false"}
-   What does each point on the graph represent?
-   Based on this scatterplot, how would you describe the relationship between these two variables?
:::

::: {.callout-note title="Code Explanation" collapse="true"}
In the code above, there are three main elements that go into producing our scatter plot:

-   The first element to the `ggplot` command identifies the **data** frame -- in this case `penguins`
-   The second element is the **mapping** which specifies how the variables are going to show up in the graph -- in this case, the x and y axes are going to come from the flipper length and body mass respectively.
-   The last element specifies the **geom** which determines how the data is represented -- since we want a scatterplot, our geometric objects are points, hence `geom_point()`

Before we add more layers to this plot, let’s pause for a moment and review the warning message we got:

> Warning: Removed 2 rows containing missing values or values outside the scale range (`geom_point()`)

We’re seeing this message because there are two penguins in our dataset with missing body mass and/or flipper length values and ggplot2 has no way of representing them on the plot without both of these values. Like R, ggplot2 subscribes to the philosophy that missing values should never silently go missing.
:::

R gives us the ability to modify and customize our visualizations a great deal -- indeed this is one of the main strengths of R. This is not a course in learning R, so we won't go through these code chunks in great detail, but it's helpful to have a basic understanding of what's going on.

Let's modify our visualization!

## Relationships Between Variables

Looking at our scatterplot above, what can you say about the relationship between body mass and flipper length? We will see later in Chapter 7 how to quantify this observation in a precise way but for the time being, let's add one more feature to our graph. As we know, there are three different species of penguins in our data set -- but our scatter plot does not show this! We can easily adust how our geom appears by specifying that the color of the point should be determined by some other variable -- i.e species.

```{r}
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point(mapping = aes(color = species))
```

::: {.callout-note title="Questions" icon="false"}
-   How does the addition of coloring by species change your understanding of this graph?
-   What additional questions about this data can you come up with?
:::

It's good practice to not rely on color alone to distinguish the points. People may perceive colors differently due to color blindness or other color vision differences and different devices might display colors in unexpected ways.

::: {.callout-note icon="false" title="Try it!"}
Modify your mapping of the points to include shape by adding `shape = species` to the `aes` mapping for the points. Don't forget a comma!
:::
