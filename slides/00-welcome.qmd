---
title: "Welcome to MTH 161"
format: revealjs
---

# Welcome!

MTH 161 -- Elementary Statistics

Section I: TR 8:10-9:35, DB 230

Section H: TR 11:20-12:45, DB 230

## Meet your professor

::: columns
::: {.column width="50%"}
Prof. Chris Hallstrom

( he / him)

[hallstro\@up.edu](mailto:hallstro@up.edu)

Buckley Center 270
:::

::: {.column width="50%"}
![](images/cch.png){fig-alt="Headshot of Chris Hallstrom" fig-align="center"}
:::
:::

# Introductions

In groups of 3-4:

-   Introduce yourselves - name, pronouns, hometown, major, interests

-   Find one thing that you all have in common

10 minutes...

Report to the class - everyone introduce someone else from the group.

## Still in your groups... {.center}

### ... for each of the following questions

\

1\. Think on your own about how you might answer (1 min)

2\. Discuss with your group your responses (5-8 min)

3\. Share out to the class one idea or thought (5 min)

## What are the goals of a college education? {.center}

## How does a person learn something new? {.center}

## What do you expect to remember from your classes 20 years from now? {.center}

## What is the value of making mistakes? {.center}

## How can we create an environment where risk taking is encouraged and productive failure is valued? {.center}

## Penguins 

Data were collected and made available by [Dr. Kristen Gorman](https://www.uaf.edu/cfos/people/faculty/detail/kristen-gorman.php) and the [Palmer Station, Antarctica LTER](https://pallter.marine.rutgers.edu/), a member of the [Long Term Ecological Research Network](https://lternet.edu/).

```{r}
#| include: false
#| message: false
#| warning: false

library(tidyverse)
library(palmerpenguins)
```

```{r}
#| echo: false
#| message: false
#| warning: false

ggplot(data = penguins,
                         aes(x = bill_length_mm,
                             y = bill_depth_mm)) +
  geom_point() +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(title = "Penguin bill dimensions",
       x = "Bill length (mm)",
       y = "Bill depth (mm)") +
  theme(plot.title.position = "plot",
        plot.caption = element_text(hjust = 0, face= "italic"),
        plot.caption.position = "plot")
```

## Look for relationships between variables

```{r}
#| echo: false
#| message: false
#| warning: false

ggplot(data = penguins,
                         aes(x = bill_length_mm,
                             y = bill_depth_mm)) +
  geom_point() +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(title = "Penguin bill dimensions",
       x = "Bill length (mm)",
       y = "Bill depth (mm)") +
  theme(plot.title.position = "plot",
        plot.caption = element_text(hjust = 0, face= "italic"),
        plot.caption.position = "plot") +
  geom_smooth(method = "lm", se = FALSE, color = "gray50")

```

## Adjust for different species

```{r}
#| echo: false
#| message: false
#| warning: false

ggplot(data = penguins,
                         aes(x = bill_length_mm,
                             y = bill_depth_mm)) +
  geom_point(aes(color = species, shape = species)) +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(title = "Penguin bill dimensions",
       x = "Bill length (mm)",
       y = "Bill depth (mm)") +
  theme(plot.title.position = "plot",
        plot.caption = element_text(hjust = 0, face= "italic"),
        plot.caption.position = "plot") +
  geom_smooth(method = "lm", se = FALSE, color = "gray50")

```

## Adjust for different species

```{r}
#| echo: false
#| message: false
#| warning: false

ggplot(data = penguins,
                         aes(x = bill_length_mm,
                             y = bill_depth_mm)) +
  geom_point(aes(color = species, shape = species)) +
  geom_smooth(method = "lm", se = FALSE, aes(color = species)) +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(title = "Penguin bill dimensions",
       x = "Bill length (mm)",
       y = "Bill depth (mm)") +
  theme(plot.title.position = "plot",
        plot.caption = element_text(hjust = 0, face= "italic"),
        plot.caption.position = "plot")

```
